version: "3.3"
services:
  nginx: 
      restart: always
      image: nginx:alpine
      container_name: nginx
      deploy:
        resources:
            limits:
              memory: 512M
            reservations:
              memory: 128M
      networks:
        - tfm-network
      ports: 
        - "80:80"
        - "443:443"
      volumes: 
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - /etc/letsencrypt:/etc/letsencrypt:ro
        - /var/log/nginx:/var/log/nginx
        - /var/www/html:/var/www/html

      depends_on:
        - tfm-backend

  tfm-backend:
    # build: .
    restart: always
    image: franmejim/tfm-backend
    expose: [ 9000 ]
    container_name: tfm-backend
    deploy:
        resources:
            limits:
              memory: 2G
            reservations:
              memory: 128M

    networks:
      - tfm-network

    volumes:
      - ./public:/usr/src/app/public
      - ./logs/server:/usr/src/app/logs
      # - /var/log/server:/home/node/logs
      # - /var/log/server:/var/log/server:rw
      
    depends_on: [ tfm-database ]

  tfm-database:
    user: postgres
    restart: always
    expose: [ 5432 ]
    image: postgres:14.3-alpine
    container_name: tfm-database
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf", "-c", "hba_file=/etc/postgresql/pg_hba.conf" ] 
    deploy:
        resources:
            limits:
              memory: 1G
            reservations:
              memory: 128M
    env_file:
      - .env.docker
    networks:
      - tfm-network
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./scripts/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh

networks:
  tfm-network:
    name: tfm-network
    ipam:
      driver: default
      config:
        - subnet: 192.168.80.0/28
          gateway: 192.168.80.1